<div id="content">
    <div class="container">
        <div class="fullwidth_column">
            <?php
            $content = '';
            foreach ($this->resources as $k => $this->resource) {
                $content .= $this->render('index/Html/resources.phtml');
            }
            if (0 < strlen($content)) {
                ?>
                <h3 class="toggler hidden" id="oauthToggler"><a rel="oauth" href="">Toggle OAuth form</a></h3>
                <?php
                if (Workbench_Model_Application::isDevelopment()) {
                ?>
                <h3 class="toggler hidden" id="styleToggler"><a rel="colorchange" href="">Toggle style form</a></h3>
                <?php
                }
                $form = new Zend_Form(array(
                    'decorators' => array('Description', 'FormElements', 'Fieldset', 'Form'),
                    'legend' => 'OAuth',
                    'description' => 'OAuth settings',
                    'elementDecorators' => array('ViewHelper', 'Label', 'HtmlTag'),
                    'attribs' => array(
                        'class' => 'formtastic',
                        'id' => 'oauth',
                    ),
                ));
                $form->addElement('text', 'consumerkey', array('label' => 'OAuth Consumerkey'));
                $form->addElement('text', 'consumersecret', array('label' => 'OAuth Consumersecret'));
                $form->addElement('select', 'signing', array(
                    'label' => 'OAuth Signing method',
                    'multiOptions' => array(
                        'sha1' => 'SHA1',
                        'rsa' => 'RSA',
                        'plaintext' => 'Plaintext'
                )));

                $form->setElementsBelongTo('oauth');
                $form->addElement('text', 'realm', array('label' => 'OAuth Realm (Optional)'));
                $form->populate(Workbench_Model_Workbench_Endpoint::getOauth());
                echo $form;

                if (Workbench_Model_Application::isDevelopment()) {
                    $form = new Zend_Form(array(
                        'decorators' => array('FormElements', 'Description', 'Fieldset', 'Form'),
                        'legend' => 'Colors!',
                        'elementDecorators' => array('ViewHelper', 'Label', 'HtmlTag'),
                        'attribs' => array(
                            'class' => 'formtastic',
                            'id' => 'colorchange'
                        ),
                        'description' => '<a id="showStyles" href="">Toggle stylesheet rules</a><div id="showStylesContainer" class="hidden"></div>',
                    ));
                    $form->getDecorator('Description')->setOption('escape', false)->setOption('tag', 'div');
                    $form->getDecorator('Fieldset')->setOption('id', null);
                    $form->addElement('text', 'styleColor', array(
                        'label' => 'background color',
                        'attribs' => array('class' => 'color'),
                    ));
                    $form->addElement('text', 'fontColor', array(
                        'label' => 'font color',
                        'attribs' => array('class' => 'color'),
                    ));
                    $methods = array('GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'HEAD');
                    $methods = array_change_key_case(array_combine($methods, $methods), CASE_LOWER);

                    $form->addElement('select', 'styleMethod', array(
                        'label' => 'HTTP method',
                        'multiOptions' => $methods,
                    ));
                    $form->addElement('checkbox', 'styleAll', array(
                        'label' => 'Style all methods?',
                        //'decorators' => array('Label', 'ViewHelper', 'HtmlTag'),
                    ));
                    $form->getElement('styleAll')->getDecorator('Label')->setOption('placement', 'APPEND');
                    $form->getElement('styleAll')->getDecorator('ViewHelper')->setOption('placement', 'PREPEND');
                    echo $form;
                }
                echo '<ul id="resources" class="resources">' , $content , '</ul>',
                     'The latest API base URL is ', Glitch_Registry::getSettings()->workbench->baseUrl;
            } else {
                echo '<p>No documentation available</p>';
            }
            if (Workbench_Model_Application::isDevelopment()) {
                echo '<div id="appDebug">';
                if (0 < count($this->resources->getSkipped())) {
                    echo '<h3>Skipped</h3>', $this->htmlList($this->resources->getSkipped());
                }
                $todos = array(
                    'Implement 3 legged OAuth',
                    'Check if master docblock of a class is required (disabled for now..)',
                    'Make Accept a select as more then one string can be send, stated by Dolf',
                    'Implement CSS colors, etc with CSS3 SSAS see http://compass-style.org/ for more info',
                    'Make a HTML5 variant with correct tags, etc..',
                    'Replace the onload hide/show based on cookie with PHP reading cookies and the place correct classes?',
                );
                echo '<h3>Todo\'s</h3>', $this->htmlList($todos, true), '</div>';
            }
            ?>
        </div>
    </div>
</div>